{"version":3,"file":"static/js/731.873470a8.chunk.js","mappings":"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","sources":["components/Contacts/Section/Section.styled.js","components/Contacts/Section/Section.jsx","components/Contacts/ContactsForm/ContactsForm.styled.js","redux/contacts/selectors.js","components/Contacts/ContactsForm/ContactsForm.jsx","components/Contacts/ContactsList/ContactsList.styled.js","utils/Spinner/spinner.slyled.js","utils/Spinner/spinner.jsx","components/Contacts/ContactsList/ContactsList.jsx","components/Contacts/ContactsFilter/ContactsFilter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionWrap = styled.section`\n  text-align: center;\n  background-color: lightslategray;\n  box-shadow: 3px 5px 8px black;\n  padding: 30px;\n  border-radius: 8px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  margin: 0 0 30px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrap, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrap>\n      <Title>{title}</Title>\n      {children}\n    </SectionWrap>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 26px;\n  font-weight: 700;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 300px;\n`;\n\nexport const Input = styled.input`\n  font-size: 24px;\n  border-radius: 6px;\n  padding: 6px 10px;\n`;\n\nexport const Button = styled.button`\n  font-size: 26px;\n  font-weight: 700;\n  border-radius: 6px;\n  padding: 8px 10px;\n  background-color: lightgreen;\n  max-width: 200px;\n  margin-top: 50px;\n  cursor: pointer;\n  box-shadow: 2px 3px 5px black;\n  transition: background-color 200ms linear, box-shadow 200ms linear;\n\n  &:hover {\n    background-color: green;\n  }\n  &:active {\n    box-shadow: 1px 1px 1px black;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectErrorStatus = state => state.contacts.error;\n\nexport const selectLoadingStatus = state => state.contacts.isLoading;\n\nexport const selectFilterValue = state => state.filter;\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectLoadingStatus } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  Notification,\n  onSameNumberNotify,\n} from 'utils/Notification/Notification';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoadingStatus);\n\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notification(name);\n      return;\n    } else if (contacts.find(contact => contact.number === number)) {\n      onSameNumberNotify(number);\n      return;\n    } else {\n      dispatch(addContact({ name, number }));\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onInputChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onInputChange}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\" disabled={isLoading}>\n        Add Contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  margin-top: 30px;\n  min-width: 620px;\n`;\n\nexport const Item = styled.li`\n  min-width: 600px;\n  font-size: 24px;\n  font-weight: 700;\n  border-radius: 6px;\n  padding: 6px 10px;\n  display: flex;\n  background-color: lightgray;\n  box-shadow: 2px 3px 5px black;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const DelButton = styled.button`\n  font-size: 26px;\n  font-weight: 700;\n  border-radius: 6px;\n  padding: 8px 10px;\n  background-color: lightcoral;\n  max-width: 200px;\n  cursor: pointer;\n  box-shadow: 2px 3px 5px black;\n  transition: background-color 200ms linear, box-shadow 200ms linear;\n\n  &:hover {\n    background-color: brown;\n  }\n  &:active {\n    box-shadow: 1px 1px 1px black;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  position: fixed;\n`;\n","import { Vortex } from 'react-loader-spinner';\nimport { LoaderWrap } from './spinner.slyled';\n\nexport const Spinner = () => {\n  return (\n    <LoaderWrap>\n      <Vortex\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      />\n    </LoaderWrap>\n  );\n};\n","import { List, Item, DelButton } from './ContactsList.styled';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectFilterValue,\n  selectContacts,\n  selectLoadingStatus,\n  selectErrorStatus,\n} from 'redux/contacts/selectors';\nimport {\n  noMatchesNotify,\n  onErrorNotify,\n  noContactsNotify,\n} from 'utils/Notification/Notification';\nimport { Spinner } from 'utils/Spinner/spinner';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoadingStatus);\n  const onError = useSelector(selectErrorStatus);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const filtered = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    if (filtered.length === 0 && filter) {\n      noMatchesNotify();\n    }\n    if (onError) {\n      onErrorNotify();\n    }\n    return filtered;\n  };\n\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n    if (contacts.length === 1) {\n      noContactsNotify();\n    }\n  };\n\n  return (\n    <List>\n      {isLoading && <Spinner />}\n      {filteredContacts().map(({ id, name, number }) => (\n        <Item key={id}>\n          {name}: {number}\n          <DelButton\n            type=\"button\"\n            disabled={isLoading}\n            onClick={() => removeContact(id)}\n          >\n            Delete\n          </DelButton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import {\n  Label,\n  Input,\n} from 'components/Contacts/ContactsForm/ContactsForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { setFilterValue } from 'redux/contacts/slice/filterSlice';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n\n  const onChange = e => {\n    dispatch(setFilterValue(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by Name:\n      <Input type=\"text\" value={filterValue} onChange={onChange} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 30px;\n`;\n","import { Section } from 'components/Contacts/Section/Section';\nimport { ContactsForm } from 'components/Contacts/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/Contacts/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/Contacts/ContactsFilter/ContactsFilter';\nimport { Wrapper } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <Wrapper>\n      <Section title=\"Phonebook\">\n        <ContactsForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <ContactsFilter />\n        <ContactsList />\n      </Section>\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["SectionWrap","styled","Title","Section","title","children","Form","Label","Input","Button","selectContacts","state","contacts","items","selectErrorStatus","error","selectLoadingStatus","isLoading","selectFilterValue","filter","ContactsForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onInputChange","e","target","value","resetForm","onSubmit","preventDefault","find","contact","toLowerCase","Notification","onSameNumberNotify","addContact","type","pattern","required","onChange","disabled","List","Item","DelButton","LoaderWrap","Spinner","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ContactsList","onError","useEffect","fetchContacts","normalizedFilter","filtered","includes","length","noMatchesNotify","onErrorNotify","filteredContacts","map","id","onClick","deleteContact","noContactsNotify","removeContact","ContactsFilter","filterValue","setFilterValue","currentTarget","Wrapper"],"sourceRoot":""}